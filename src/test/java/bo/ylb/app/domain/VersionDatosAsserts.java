package bo.ylb.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VersionDatosAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVersionDatosAllPropertiesEquals(VersionDatos expected, VersionDatos actual) {
        assertVersionDatosAutoGeneratedPropertiesEquals(expected, actual);
        assertVersionDatosAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVersionDatosAllUpdatablePropertiesEquals(VersionDatos expected, VersionDatos actual) {
        assertVersionDatosUpdatableFieldsEquals(expected, actual);
        assertVersionDatosUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVersionDatosAutoGeneratedPropertiesEquals(VersionDatos expected, VersionDatos actual) {
        assertThat(actual)
            .as("Verify VersionDatos auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVersionDatosUpdatableFieldsEquals(VersionDatos expected, VersionDatos actual) {
        assertThat(actual)
            .as("Verify VersionDatos relevant properties")
            .satisfies(a -> assertThat(a.getNombreVersion()).as("check nombreVersion").isEqualTo(expected.getNombreVersion()))
            .satisfies(a -> assertThat(a.getFechaVersion()).as("check fechaVersion").isEqualTo(expected.getFechaVersion()))
            .satisfies(a -> assertThat(a.getCiteVersion()).as("check citeVersion").isEqualTo(expected.getCiteVersion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVersionDatosUpdatableRelationshipsEquals(VersionDatos expected, VersionDatos actual) {
        assertThat(actual)
            .as("Verify VersionDatos relationships")
            .satisfies(a -> assertThat(a.getProyecto()).as("check proyecto").isEqualTo(expected.getProyecto()));
    }
}
